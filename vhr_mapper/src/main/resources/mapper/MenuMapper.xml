<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.vhr.MenuMapper">
  <resultMap id="BaseResultMap" type="org.example.vhr.Menu">
    <!--@mbg.generated-->
    <!--@Table menu-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="component" jdbcType="VARCHAR" property="component" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="iconCls" jdbcType="VARCHAR" property="iconcls" />
    <result column="keepAlive" jdbcType="BOOLEAN" property="keepalive" />
    <result column="requireAuth" jdbcType="BOOLEAN" property="requireauth" />
    <result column="parentId" jdbcType="INTEGER" property="parentid" />
    <result column="enabled" jdbcType="BOOLEAN" property="enabled" />
    <association property="meta" javaType="org.example.vhr.meta">
      <result column="keepAlive" property="keepAlive" jdbcType="BIT" />
      <result column="requireAuth" property="requireAuth" jdbcType="BIT" />
    </association>
  </resultMap>
  <resultMap id="Menu2" type="org.example.vhr.Menu" extends="BaseResultMap">
    <collection property="children" ofType="org.example.vhr.Menu">
      <id column="id2" property="id" jdbcType="INTEGER" />
      <result column="url2" property="url" jdbcType="VARCHAR" />
      <result column="path2" property="path" jdbcType="VARCHAR" />
      <result column="component2" property="component" jdbcType="VARCHAR" />
      <result column="name2" property="name" jdbcType="VARCHAR" />
      <result column="iconCls2" property="iconcls" jdbcType="VARCHAR" />
      <result column="parentId2" property="parentid" jdbcType="INTEGER" />
      <result column="enabled2" property="enabled" jdbcType="BIT" />
      <association property="meta" javaType="org.example.vhr.meta">
        <result column="keepAlive2" property="keepAlive" jdbcType="BIT" />
        <result column="requireAuth2" property="requireAuth" jdbcType="BIT" />
      </association>
    </collection>

  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, url, `path`, component, `name`, iconCls, keepAlive, requireAuth, parentId, enabled
  </sql>
  <select id="selectByExample" parameterType="org.example.vhr.MenuExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.example.vhr.MenuExample">
    <!--@mbg.generated-->
    delete from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.vhr.Menu" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into menu (url, `path`, component, 
      `name`, iconCls, keepAlive, 
      requireAuth, parentId, enabled
      )
    values (#{url,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{iconcls,jdbcType=VARCHAR}, #{keepalive,jdbcType=BOOLEAN}, 
      #{requireauth,jdbcType=BOOLEAN}, #{parentid,jdbcType=INTEGER}, #{enabled,jdbcType=BOOLEAN}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.vhr.Menu" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="url != null">
        url,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="iconcls != null">
        iconCls,
      </if>
      <if test="keepalive != null">
        keepAlive,
      </if>
      <if test="requireauth != null">
        requireAuth,
      </if>
      <if test="parentid != null">
        parentId,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconcls != null">
        #{iconcls,jdbcType=VARCHAR},
      </if>
      <if test="keepalive != null">
        #{keepalive,jdbcType=BOOLEAN},
      </if>
      <if test="requireauth != null">
        #{requireauth,jdbcType=BOOLEAN},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BOOLEAN},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.example.vhr.MenuExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update menu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        `path` = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.component != null">
        component = #{record.component,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.iconcls != null">
        iconCls = #{record.iconcls,jdbcType=VARCHAR},
      </if>
      <if test="record.keepalive != null">
        keepAlive = #{record.keepalive,jdbcType=BOOLEAN},
      </if>
      <if test="record.requireauth != null">
        requireAuth = #{record.requireauth,jdbcType=BOOLEAN},
      </if>
      <if test="record.parentid != null">
        parentId = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BOOLEAN},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update menu
    set id = #{record.id,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      `path` = #{record.path,jdbcType=VARCHAR},
      component = #{record.component,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      iconCls = #{record.iconcls,jdbcType=VARCHAR},
      keepAlive = #{record.keepalive,jdbcType=BOOLEAN},
      requireAuth = #{record.requireauth,jdbcType=BOOLEAN},
      parentId = #{record.parentid,jdbcType=INTEGER},
      enabled = #{record.enabled,jdbcType=BOOLEAN}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.vhr.Menu">
    <!--@mbg.generated-->
    update menu
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="component != null">
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="iconcls != null">
        iconCls = #{iconcls,jdbcType=VARCHAR},
      </if>
      <if test="keepalive != null">
        keepAlive = #{keepalive,jdbcType=BOOLEAN},
      </if>
      <if test="requireauth != null">
        requireAuth = #{requireauth,jdbcType=BOOLEAN},
      </if>
      <if test="parentid != null">
        parentId = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BOOLEAN},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.vhr.Menu">
    <!--@mbg.generated-->
    update menu
    set url = #{url,jdbcType=VARCHAR},
      `path` = #{path,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      iconCls = #{iconcls,jdbcType=VARCHAR},
      keepAlive = #{keepalive,jdbcType=BOOLEAN},
      requireAuth = #{requireauth,jdbcType=BOOLEAN},
      parentId = #{parentid,jdbcType=INTEGER},
      enabled = #{enabled,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="findIdsByMenus" resultMap="Menu2">
       SELECT distinct m1.*,m2.`id` as id2,m2.`component` as component2,m2.`enabled` as enabled2,m2.`iconCls` as iconCls2,m2.`keepAlive` as keepAlive2,m2.`name` as name2,m2.`parentId` as parentId2,m2.`requireAuth` as requireAuth2,m2.`path` as path2
FROM menu m1,(SELECT * FROM menu WHERE enabled =1 AND id IN(SELECT mid FROM menu_role WHERE rid IN(SELECT rid FROM hr_role WHERE hrid = #{hrId}))) m2 WHERE m2.parentId = m1.id
    </select>
  <select id="findAll" resultMap="Menu2">
   SELECT distinct m1.*,m2.`id` as id2,m2.`component` as component2,m2.`enabled` as enabled2,m2.`iconCls` as iconCls2,m2.`keepAlive` as keepAlive2,m2.`name` as name2,m2.`parentId` as parentId2,m2.`requireAuth` as requireAuth2,m2.`path` as path2
FROM menu m1,menu m2 WHERE m2.parentId = m1.id
  </select>
  <select id="getMidByRid" resultType="java.lang.Integer">
    SELECT distinct m1.*,m2.`id` as id2,m2.`component` as component2,m2.`enabled` as enabled2,m2.`iconCls` as iconCls2,m2.`keepAlive` as keepAlive2,m2.`name` as name2,m2.`parentId` as parentId2,m2.`requireAuth` as requireAuth2,m2.`path` as path2
FROM menu m1,(SELECT * FROM menu WHERE id IN (SELECT mid FROM menu_role WHERE rid = #{rid,jdbcType=INTEGER})) m2 WHERE m2.parentId = m1.id
  </select>
</mapper>